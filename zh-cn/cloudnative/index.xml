<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloudnatives on Mark Zhu&#39;s Blog</title>
    <link>/zh-cn/cloudnative/</link>
    <description>Recent content in Cloudnatives on Mark Zhu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Apr 2020 17:42:57 +0800</lastBuildDate>
    
	<atom:link href="/zh-cn/cloudnative/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Istio 中监视 API 调用报文</title>
      <link>/zh-cn/cloudnative/service-mesh/log-api-payload-istio/</link>
      <pubDate>Sat, 11 Apr 2020 17:42:57 +0800</pubDate>
      
      <guid>/zh-cn/cloudnative/service-mesh/log-api-payload-istio/</guid>
      <description>概述 API调用报文捕获是进行故障排除的关键工具。
Tcpdump是在ISO第3〜6层工作的工具，许多现代API在第7层（HTTP）工作，许多捕获规则仅在第7层有效。 例如。 通过URL路径过滤对于tcpdump来说很困难：
tcpdump -i enp0s8 -s 0 -v -n -l | egrep -i &amp;#34;POST /|GET /|Host:&amp;#34; 一般方法：minikube 或 Node Local（物理节点）上用 tcpdump 以下是tcpdump的示例。
[root@host-os ~]# ps -ef | grep -i myServicePS 100 398212 398058 0 Apr07 ? 00:26:08 java ...myServicePS... set CONTAINER_PID_AT_HOST=398212 [root@host-os ~]# nsenter -t $CONTAINER_PID_AT_HOST -u -i -n -p -C tcpdump -A -vv ... 在许多情况下，很难在大量的 tcpdump 结果中找到您的API。
Sidecar(Envoy) Filter/Tap 方式 在 Istio 中，Envoy是所有API流量的代理。 它支持HTTP过滤器，我们可以在Envoy上创建一些过滤器来捕获负载报文。
有两种方法：</description>
    </item>
    
  </channel>
</rss>